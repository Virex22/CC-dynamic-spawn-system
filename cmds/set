local enums = dofile("/utils/enums")
local helper = dofile("/utils/global_helper")
local store = dofile("/utils/store")

local function validateValue(value)
    isPercentage = string.find(value, "%d+%%") ~= nil
    isNumber = tonumber(value) ~= nil
    if not isPercentage and not isNumber then
        print("Invalid value:", value)
        return false
    end
    return true
end

local function processSetCommand(args)
    if #args < 4 then
        print("Usage: set [Zone] [PercentageValue / Count] ([TypeOfMob], default: terrorist)")
        return
    end

    local zone = args[2]
    local value = args[3]
    local mob = args[4]

    if not helper.isInArray(enums.Zones, zone, true) then
        print("Invalid Zone:", zone)
        return
    end

    if not validateValue(value) then
        return
    end

    if mob ~= nil and helper.isInArray(enums.Mechants, mob, true) then
        print("Invalid MobType:", zone)
        return
    elseif mob == nil then
        mob = enums.Mechants.Terroriste
    end

    store.generateOption[zone] = {{
        value = value,
        mob = mob
    }}
    store.save()
end

local env = _ENV

processSetCommand(env.args)
